Commande : echo "abc$USERdef"
Résultat attendu : Affiche abcjohn_doedef (expansion au milieu d'une chaîne).

ctrl-\ marche mal

Test  13: ❌ echo "> >> < * ? [ ] | ; [ ] || && ( ) & # $  <<" 
mini output = (> >> < bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles os_specific outfiles pipes README.md redirects syntax tester test_files test.txt wildcards ? [ ] | ; [ ] || && ( ) & # $ <<)
bash output = (> >> < bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles os_specific outfiles pipes README.md redirects syntax tester test_files test.txt wildcards ? [ ] | ; [ ] || && ( ) & # $ <<)

Test  15: ❌ echo "exit_code ->$? user ->$USER home -> $HOME" 
mini output = (exit_code ->0user ->jcohen home -> /home/jcohen)
bash output = (exit_code ->0 user ->jcohen home -> /home/jcohen)

Test  17: ❌ echo "$" 
mini output = ()
bash output = ($)

Test  21: ❌ echo $?HELLO 
mini output = (0 HELLO)
bash output = (0HELLO)

Test  26: ❌ export A- 
mini exit code = 0
bash exit code = 1
mini error = ()
bash error = ( not a valid identifier)

Test  30: ❌ export HELLO-=123 
mini exit code = 0
bash exit code = 1
mini error = ()
bash error = ( not a valid identifier)

Test  31: ❌ export = 
mini exit code = 0
bash exit code = 1
mini error = ()
bash error = ( not a valid identifier)
Test  32: ❌ export 123 
mini exit code = 0
bash exit code = 1
mini error = ()
bash error = ( not a valid identifier)

Test  40: ❌ cd $PWD hi 
mini exit code = 0
bash exit code = 1
mini error = ()
bash error = ( too many arguments)
Test  41: ❌ cd 123123 
mini exit code = 0
bash exit code = 1

Test  51: ❌ exit 42 world 
mini exit code = 42
bash exit code = 1
mini error = ()
bash error = ( too many arguments)

Test  55: ❌ cat minishell.h | grep ");"$ 
mini exit code = 0
bash exit code = 1
mini error = ( No such file or directory No such file or directory)
bash error = ( No such file or directory)
Test  56: ❌ export GHOST=123 | env | grep GHOST 
mini exit code = 0
bash exit code = 1

Test  58: ❌ grep hi "<infile" <         ./test_files/infile 
mini exit code = 0
bash exit code = 2

Test  64: ❌ cat <"1""2""3""4""5" 
mini exit code = 0
bash exit code = 1
Test  65: ❌ echo <"./test_files/infile" <missing <"./test_files/infile" 
mini exit code = 0
bash exit code = 1
mini error = ()
bash error = ( No such file or directory)
Test  66: ❌ echo <missing <"./test_files/infile" <missing 
mini exit code = 0
bash exit code = 1

Test  76: ❌ cat <missing 
mini exit code = 0
bash exit code = 1

Test  85: ❌ ls >./outfiles/outfile01 >./test_files/invalid_permission 
Only in ./bash_outfiles: outfile01
mini outfiles:
bash outfiles:
mini exit code = 0
bash exit code = 1

Test  92: ❌ echo hi >./outfiles/outfile01 >./outfiles/outfile02 | echo bye 
Only in ./bash_outfiles: outfile01
mini outfiles:
hi
bash outfiles:
hi

Test  94: ❌ echo hi | echo bye >./outfiles/outfile01 >./outfiles/outfile02 
Only in ./bash_outfiles: outfile01
mini outfiles:
bye
bash outfiles:
bye

Test  96: ❌ echo hi >./outfiles/outfile01 >./test_files/invalid_permission | echo bye 
Only in ./bash_outfiles: outfile01
mini outfiles:
bash outfiles:

Test  98: ❌ echo hi >./test_files/invalid_permission >./outfiles/outfile01 | echo bye 
Only in ./mini_outfiles: outfile01
mini outfiles:
hi
bash outfiles:
mini error = ()
bash error = ( Permission denied)

Test 133: ❌ $PWD 
mini exit code = 0
bash exit code = 126
mini error = ( Permission denied)
bash error = ( Is a directory)

Test 144: ❌ $ 
mini exit code = 0
bash exit code = 127
Test 145: ❌ $? 
mini exit code = 0
bash exit code = 127
Test 146: ❌ README.md
